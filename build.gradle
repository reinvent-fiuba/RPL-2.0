plugins {
    id 'org.springframework.boot' version '2.2.0.M5'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
    id 'org.flywaydb.flyway' version '5.1.1'
    id 'groovy'
    id 'jacoco'
}

group = 'com.example.rpl'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
	jcenter()
}

ext {
    set('springCloudVersion', "Hoxton.M2")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.flywaydb:flyway-core:5.2.4'

    implementation 'com.github.ben-manes.caffeine:caffeine:2.6.2'
    implementation 'com.fasterxml.jackson.module:jackson-module-paranamer'
    implementation 'io.jsonwebtoken:jjwt:0.9.0'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    runtimeOnly 'com.h2database:h2'
    runtime 'mysql:mysql-connector-java'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'


    implementation 'com.github.tomakehurst:wiremock:2.21.0'
//    For groovy Spock testing
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.spockframework:spock-core:1.3-groovy-2.5'
    testImplementation 'org.spockframework:spock-spring:1.3-groovy-2.5'


    testImplementation('io.rest-assured:spring-mock-mvc:4.0.0') {
        exclude group: 'com.sun.xml.bind', module: 'jaxb-osgi'
    }
    testRuntime 'cglib:cglib-nodep:3.2.6'

    compile "io.springfox:springfox-swagger2:2.9.2"
    compile 'org.springframework.plugin:spring-plugin-core:1.2.0.RELEASE'

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

jacocoTestReport {
    reports {
        xml.enabled false
        html.enabled true
    }
    afterEvaluate {
        classDirectories.from = files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: [
                            'com/example/rpl/RPL/RplApplication',
                            'com/example/rpl/RPL/config/**',
                            'com/example/rpl/RPL/model/**',
                            'com/example/rpl/RPL/security/**',
                            'com/example/rpl/RPL/exception/**',
                            'com/example/rpl/RPL/controller/dto/**',
                            'com/example/rpl/RPL/queue/Consumer.java',
                    ])
        })
    }
}

check.dependsOn jacocoTestReport

tasks.register("convertSwaggerJSONtoYAML", Exec) {
    description = 'Produces a greeting'
    
    println("You must have api-spec-converter installed")
    println("npm install -g api-spec-converter")
    

    commandLine 'api-spec-converter', '--from=swagger_2', '--to=swagger_2', '--syntax=yaml', 'swagger.json'

    standardOutput = new ByteArrayOutputStream()
    new File('swagger.yaml').write(standardOutput.toString())
}