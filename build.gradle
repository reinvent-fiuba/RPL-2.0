plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.12'
    id 'io.spring.dependency-management' version '1.1.3'  // Esto se ocupa de que todas las dependencias org.springframework.boot se use la version compatible con la version de springboot definida arriba

    id 'org.flywaydb.flyway' version '9.22.0'
    id 'groovy'
    id 'jacoco'
}

group = 'com.example.rpl'
version = '0.0.2-SNAPSHOT'

java {
  sourceCompatibility = '17'
}

configurations {
    developmentOnly
    runtimeClasspath {
        extendsFrom developmentOnly
    }
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

test {
    testLogging {
        events "passed", "skipped", "failed" //, "standardOut", "standardError"

        showExceptions true
        exceptionFormat "full"
        showCauses true
        showStackTraces true

        showStandardStreams = false
    }
}

dependencies {
    configurations.all {
	    exclude group: "commons-logging", module: "commons-logging"
	}
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-amqp'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    // https://mvnrepository.com/artifact/org.flywaydb/flyway-core
    implementation group: 'org.flywaydb', name: 'flyway-core', version: '9.22.1'


    // https://mvnrepository.com/artifact/org.apache.httpcomponents.client5/httpclient5
    implementation group: 'org.apache.httpcomponents.client5', name: 'httpclient5', version: '5.2.1'


    // https://mvnrepository.com/artifact/com.github.ben-manes.caffeine/caffeine
    implementation group: 'com.github.ben-manes.caffeine', name: 'caffeine', version: '3.1.8'

    // https://mvnrepository.com/artifact/com.fasterxml.jackson.module/jackson-module-paranamer
    implementation group: 'com.fasterxml.jackson.module', name: 'jackson-module-paranamer', version: '2.15.2'

    // https://mvnrepository.com/artifact/io.jsonwebtoken/jjwt-api
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name:'jjwt-impl', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name:'jjwt-jackson', version: '0.11.5'


    implementation group: 'org.apache.commons', name: 'commons-compress', version: '1.26.2'
    implementation group: 'org.javatuples', name: 'javatuples', version: '1.2'

    compileOnly 'org.projectlombok:lombok:1.18.28'
    annotationProcessor 'org.projectlombok:lombok:1.18.28'

    testCompileOnly 'org.projectlombok:lombok:1.18.28'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.28'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // https://mvnrepository.com/artifact/com.h2database/h2
    runtimeOnly group: 'com.h2database', name: 'h2', version: '2.2.220'

    // runtimeOnly 'mysql:mysql-connector-java'
    // https://mvnrepository.com/artifact/com.mysql/mysql-connector-j
    implementation group: 'com.mysql', name: 'mysql-connector-j', version: '8.0.33'


    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    implementation 'com.github.tomakehurst:wiremock:2.21.0'
//    For groovy Spock testing
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-test
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', version: '3.1.3'

    // https://mvnrepository.com/artifact/org.spockframework/spock-core
    testImplementation group: 'org.spockframework', name: 'spock-core', version: '2.3-groovy-4.0'

    // https://mvnrepository.com/artifact/org.spockframework/spock-spring
    testImplementation group: 'org.spockframework', name: 'spock-spring', version: '2.3-groovy-4.0'

    testImplementation('io.rest-assured:spring-mock-mvc:4.0.0') {
        exclude group: 'com.sun.xml.bind', module: 'jaxb-osgi'
    }
    testRuntimeOnly 'cglib:cglib-nodep:3.2.6'

    // implementation group: 'io.springfox', name: 'springfox-swagger2', version: '3.0.0'
    // https://mvnrepository.com/artifact/org.springframework.plugin/spring-plugin-core
    implementation group: 'org.springframework.plugin', name: 'spring-plugin-core', version: '3.0.0'



    runtimeOnly "com.newrelic.agent.java:newrelic-java:5.13.0"

    // https://mvnrepository.com/artifact/jakarta.persistence/jakarta.persistence-api
    implementation group: 'jakarta.persistence', name: 'jakarta.persistence-api', version: '3.1.0'
    // https://mvnrepository.com/artifact/jakarta.validation/jakarta.validation-api
    implementation group: 'jakarta.validation', name: 'jakarta.validation-api', version: '3.0.2'

    // https://mvnrepository.com/artifact/jakarta.servlet/jakarta.servlet-api
    compileOnly group: 'jakarta.servlet', name: 'jakarta.servlet-api', version: '6.0.0'



    // implementation group: 'javax.persistence', name: 'jakarta.persistence-api', version: '2.2'
    // implementation group: 'jakarta.validation', name: 'validation-api', version: '2.0.1.Final'
    // https://mvnrepository.com/artifact/jakarta.servlet/jakarta.servlet-api
    // compileOnly group: 'jakarta.servlet', name: 'jakarta.servlet-api', version: '3.0.1'

}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2022.0.3"
    }
}

jacocoTestReport {
    reports {
        xml.required = false
        html.required = true
    }
    afterEvaluate {
        classDirectories.from = files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: [
                            'com/example/rpl/RPL/RplApplication',
                            'com/example/rpl/RPL/config/**',
                            'com/example/rpl/RPL/model/**',
                            'com/example/rpl/RPL/security/**',
                            'com/example/rpl/RPL/exception/**',
                            'com/example/rpl/RPL/controller/dto/**',
                            'com/example/rpl/RPL/queue/Consumer.java',
                    ])
        })
    }
}

check.dependsOn jacocoTestReport

// tasks.register("convertSwaggerJSONtoYAML", Exec) {
//     description = 'Produces a greeting'

//     println("You must have api-spec-converter installed")
//     println("npm install -g api-spec-converter")


//     commandLine 'api-spec-converter', '--from=swagger_2', '--to=swagger_2', '--syntax=yaml', 'swagger.json'

//     standardOutput = new ByteArrayOutputStream()
//     new File('swagger.yaml').write(standardOutput.toString())
// }
