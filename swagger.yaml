swagger: '2.0'
info:
  contact:
    email: levinasale@gmail.com;matiasjosecc@gmail.com
    name: Alejandro Levinas o Mat√≠as Cano
    url: 'http://example.com/support'
  description: Esta es la API de RPL 2.0 para todos y todas
  license:
    name: License of API
    url: 'http://example.com/support'
  termsOfService: Terms of service
  title: RPL 2.0
  version: '0.1'
host: 'localhost:41275'
basePath: /
paths:
  /api/auth/signup:
    post:
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - description: createUserDTO
          in: body
          name: createUserDTO
          required: true
          schema:
            $ref: '#/definitions/CreateUserDTO'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/UserDTO'
      tags:
        - authentication-controller
      deprecated: false
      operationId: createUsingPOST
      summary: create
  /health:
    get:
      produces:
        - plain/text
      responses:
        '200':
          description: OK
          schema:
            type: string
        '403':
          description: Forbidden!!!!!
        '500':
          description: 500 message
          schema:
            $ref: '#/definitions/Error'
      tags:
        - health-controller
      deprecated: false
      operationId: pingUsingGET
      summary: ping
  /submit:
    post:
      consumes:
        - application/json
      produces:
        - '*/*'
      parameters:
        - description: ticket
          in: body
          name: ticket
          required: true
          schema:
            $ref: '#/definitions/Ticket'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Ticket'
      tags:
        - producer-controller
      deprecated: false
      operationId: submitUsingPOST
      summary: submit
definitions:
  CreateUserDTO:
    properties:
      degree:
        type: string
      email:
        type: string
      name:
        type: string
      password:
        type: string
      student_id:
        type: string
      surname:
        type: string
      university:
        type: string
      username:
        type: string
    title: CreateUserDTO
    type: object
  Ticket:
    properties:
      quantity:
        format: int64
        type: integer
    title: Ticket
    type: object
  UserDTO:
    properties:
      date_created:
        format: date-time
        type: string
      degree:
        type: string
      email:
        type: string
      email_validated:
        type: boolean
      id:
        format: int64
        type: integer
      last_updated:
        format: date-time
        type: string
      name:
        type: string
      student_id:
        type: string
      surname:
        type: string
      university:
        type: string
      username:
        type: string
    title: UserDTO
    type: object
tags:
  - description: Authentication Controller
    name: authentication-controller
  - description: Health Controller
    name: health-controller
  - description: Producer Controller
    name: producer-controller

